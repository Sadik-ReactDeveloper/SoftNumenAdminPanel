{"version":3,"sources":["views/apps/freshlist/parts/Scheduler.js"],"names":["selectItem1","importData","Scheduler","useState","scheduler","setScheduler","Adhocfile","setAdhocfile","selectedOptions","modal","setModal","toggle","Role","setRole","allPart","setAllPart","useEffect","console","log","handleInputChange","e","target","name","value","checked","className","onSubmit","preventDefault","JSON","parse","localStorage","getItem","Set","lg","md","sm","required","type","StartDate","onChange","Start_Time","style","marginRight","Pattern","width","placeholder","Every_Interval","Recurrence","marginTop","marginBottom","Occurance_frequency","marginLeft","End_by_date","Ripple","color","disabled","onClick","fill","multiple","files","formdata","FormData","split","join","adhodfile","selectType","includes","append","PartCatelougue","then","res","swal","catch","err","handleSubmit","fullscreen","size","backdrop","isOpen","bordered","hover","responsive","map","ele","i","key","cursor","scope"],"mappings":"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","file":"static/js/352.48a1313c.chunk.js","sourcesContent":["// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Row,\r\n  FormGroup,\r\n  CustomInput,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  InputGroup,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { timers } from \"jquery\";\r\nimport { PartCatelougue } from \"../../../../ApiEndPoint/ApiCalling\";\r\nconst selectItem1 = [];\r\nconst selectstate2 = [];\r\n\r\nconst AllunSelectedCity = [];\r\nconst Selectedarray = [];\r\n\r\nconst importData = [\r\n  \"Product Registration\",\r\n  \"SpareParts\",\r\n  \"Orders\",\r\n  \"PartsCatalogue\",\r\n  \"Scrutiny / Inspections\",\r\n  \"Invoices / Billing\",\r\n  \"Support\",\r\n  \"Servicing\",\r\n  \"Warehouse\",\r\n  \"Distributors\",\r\n  \"Dealers\",\r\n  \"Suppliers\",\r\n  \"Service Centers\",\r\n  \"Customer Data\",\r\n  \"Campaigns\",\r\n];\r\nconst Scheduler = () => {\r\n  const [scheduler, setScheduler] = useState({});\r\n  const [Adhocfile, setAdhocfile] = useState({});\r\n  const [Viewpermisson, setViewpermisson] = useState(null);\r\n  const [Editpermisson, setEditpermisson] = useState(null);\r\n  const [Createpermisson, setCreatepermisson] = useState(null);\r\n  const [Deletepermisson, setDeletepermisson] = useState(null);\r\n\r\n  const [selectedOptions, setselectedOptions] = useState([]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const [Role, setRole] = useState(\"\");\r\n  const [allPart, setAllPart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAllPart(importData);\r\n    // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // let newparmisson = pageparmission?.role?.find(\r\n    //   (value) => value?.pageName === \"Create Account\"\r\n    // );\r\n    // setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n    // setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n    // setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n    // setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    console.log(scheduler);\r\n    console.log(Adhocfile);\r\n  }, [scheduler, Adhocfile]);\r\n  const handleInputChange = (e) => {\r\n    const { name, value, checked } = e.target;\r\n    setScheduler({\r\n      ...scheduler,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handleopentoggle = () => {\r\n    toggle();\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    let selectedOption = [...new Set(selectedOptions)];\r\n  };\r\n\r\n  const HandleSelectRole = (val) => {\r\n    setRole(val);\r\n    toggle();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    // console.log(Adhocfile[0].name.split(\".\")[0]);\r\n    console.log(Role.split(\" \").join(\"\"));\r\n    let adhodfile = Adhocfile[0].name.split(\".\")[0];\r\n    let selectType = Role.split(\" \").join(\"\");\r\n    // console.log(adhodfile.includes(selectType));\r\n    if (adhodfile.includes(selectType)) {\r\n      formdata.append(\"file\", Adhocfile[0]);\r\n      formdata.append(\"partType\", selectType);\r\n      PartCatelougue(formdata)\r\n        .then((res) => {\r\n          console.log(res);\r\n          swal(`${Role} File Uploaded Successfully`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      swal(\r\n        \"Error!\",\r\n        `Note: ${Role} Name and ${adhodfile} Name Prefix Should be Match`,\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Scheduler Time</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Start Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"StartDate\"\r\n                      value={scheduler?.StartDate}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Start Time </Label>\r\n                    <Input\r\n                      required\r\n                      type=\"time\"\r\n                      name=\"Start_Time\"\r\n                      value={scheduler?.Start_Time}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Recurrence Pattern</Label>\r\n                  <div className=\"form-label-group mt-2\">\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Yearly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Yearly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Monthly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Monthly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Weekly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Weekly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Daily\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Daily</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Hourly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Hourly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Minuts\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Minuts</span>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  {scheduler?.Pattern && scheduler?.Pattern && (\r\n                    <>\r\n                      <Label className=\"mb-1\">\r\n                        If you want to Repeated Time\r\n                      </Label>\r\n\r\n                      <FormGroup className=\"d-flex\">\r\n                        <div className=\"mx-2\">\r\n                          <Input\r\n                            type=\"radio\"\r\n                            name=\"Repeat_time\"\r\n                            value=\"Every\"\r\n                            onChange={(e) => handleInputChange(e)}\r\n                          />\r\n                          <span style={{ marginRight: \"3px\" }}>Every</span>\r\n                        </div>\r\n                        <div>\r\n                          <Input\r\n                            className=\"every\"\r\n                            style={{ marginRight: \"3px\", width: \"80px\" }}\r\n                            type=\"text\"\r\n                            placeholder={scheduler?.Pattern}\r\n                            name=\"Every_Interval\"\r\n                            value={scheduler?.Every_Interval}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            // value=\"\"\r\n                          />\r\n                        </div>\r\n                      </FormGroup>\r\n                    </>\r\n                  )}\r\n                </Col>\r\n                <hr />\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label className=\"my-1\">Range Of Recurrence </Label>\r\n                    <div className=\"ml-2 \">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"No_End_Date\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>No End Date</span>\r\n                    </div>\r\n                    <div className=\"ml-2 \">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"End_After\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>End After</span>\r\n                    </div>\r\n                    {scheduler?.Recurrence == \"End_After\" && (\r\n                      <div className=\"d-flex py-1\">\r\n                        <div\r\n                          className=\"OccurrencesStyle\"\r\n                          style={{ marginTop: \"-5px\" }}\r\n                        >\r\n                          <Input\r\n                            style={{\r\n                              marginRight: \"3px\",\r\n                              width: \"100px\",\r\n                              marginBottom: \"2px\",\r\n                            }}\r\n                            value={scheduler?.Occurance_frequency}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            type=\"number\"\r\n                            name=\"Occurance_frequency\"\r\n                            placeholder=\"Occurrences Time\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <span style={{ marginLeft: \"10px\" }}>\r\n                            <b>Occurrences</b>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"ml-2\">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"End_by\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>End by</span>\r\n                    </div>\r\n                    {scheduler?.Recurrence == \"End_by\" && (\r\n                      <Input\r\n                        value={scheduler?.End_by_date}\r\n                        type=\"date\"\r\n                        name=\"End_by_date\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n\r\n            <hr />\r\n\r\n            <Form>\r\n              <Row className=\"mt-2\">\r\n                <Col>\r\n                  <Label>Import Type</Label>\r\n                  <InputGroup className=\"maininput\">\r\n                    <Input\r\n                      disabled\r\n                      name=\"Role\"\r\n                      value={Role}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                      type=\"text\"\r\n                      placeholder=\"Import Search\"\r\n                      className=\"form-control inputs\"\r\n                    />\r\n                    <Button\r\n                      onClick={handleopentoggle}\r\n                      color=\"primary\"\r\n                      className=\"mybtn primary\"\r\n                    >\r\n                      <AiOutlineSearch\r\n                        onClick={(e) => e.preventDefault()}\r\n                        fill=\"white\"\r\n                      />\r\n                    </Button>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Adhoc Upload</h4>\r\n                  </Label>\r\n\r\n                  <input\r\n                    multiple\r\n                    className=\"form-control\"\r\n                    style={{ marginRight: \"3px\" }}\r\n                    name=\"adhocfiles\"\r\n                    type=\"file\"\r\n                    onChange={(e) => setAdhocfile(e.target.files)}\r\n                  />\r\n                </Col>\r\n                <Col\r\n                  lg=\"6\"\r\n                  md=\"6\"\r\n                  sm=\"6\"\r\n                  className=\"mb-2 d-flex justify-content-center\"\r\n                >\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    onClick={(e) => handleSubmit(e)}\r\n                    className=\"mr-1 mt-2 mx-2\"\r\n                  >\r\n                    Upload\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Modal\r\n          fullscreen=\"xl\"\r\n          size=\"lg\"\r\n          backdrop={false}\r\n          isOpen={modal}\r\n          toggle={toggle}\r\n          // {...args}\r\n        >\r\n          <ModalHeader toggle={toggle}>Import Type List</ModalHeader>\r\n          <ModalBody className=\"table-body shedulemodalbody\">\r\n            <div className=\"modalheaderaddrol p-1\">\r\n              <h3 className=\"table-item\">Import Type</h3>\r\n\r\n              <Table\r\n                className=\"scheduletble_heading\"\r\n                bordered\r\n                hover\r\n                responsive\r\n                size=\"sm\"\r\n              >\r\n                <thead className=\"tableRowStyle\">\r\n                  <tr className=\"tableRowStyle\">\r\n                    <th>S.No.</th>\r\n                    <th>Import Type Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allPart.map((ele, i) => {\r\n                    return (\r\n                      <tr\r\n                        className=\"tableRowStyles\"\r\n                        key={i}\r\n                        name=\"Role\"\r\n                        onClick={(e) => HandleSelectRole(ele)}\r\n                        // onClick={(e) => {\r\n                        //   setScheduler({ ...scheduler, [\"Role\"]: ele });\r\n                        //   HandleSelectRole(ele);\r\n                        // }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        <th scope=\"row\" className=\"tableRowStyles\">\r\n                          {i + 1}\r\n                        </th>\r\n                        <td className=\"tableRowStyles\"> {ele}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={toggle}>\r\n              Submit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Scheduler;\r\n"],"sourceRoot":""}