{"version":3,"sources":["views/apps/freshlist/parts/Imagemagnify.js","views/apps/freshlist/parts/PartCatalougue.js","../node_modules/reactstrap/es/Table.js"],"names":["ImageZoom","imageSrc","useState","scale","setScale","x","y","position","setPosition","useEffect","handleScroll","e","deltaY","shiftKey","prevScale","window","addEventListener","removeEventListener","handleMove","direction","prevPosition","className","Button","size","onClick","color","outline","src","alt","style","transform","width","boundingBox","target","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","xOffset","yOffset","height","PartCatalougue","CollapseIndex","setCollapseIndex","frontSide","setfrontSide","AllData","setAllData","ListData","setListData","Fullimage","setFullimage","cart","setCart","map","product","quantity","elementData","quantities","setQuantities","context","useContext","UserContext","PartCatalogueView","then","res","Parts_Catalogue","keys","Object","backAxleSubassembly","catch","err","console","log","initialQuantities","Array","length","fill","setPartsCatalougueCart","Row","Col","Breadcrumb","BreadcrumbItem","href","active","lg","md","sm","xs","ele","i","Card","backgroundColor","key","toggleCollapse","CardHeader","CardTitle","substring","cursor","Imagemagnify","Part_Image","text","innerHeight","Table","bordered","hover","striped","val","_id","scope","Part_Name","Part_Number","padding","index","prevQuantities","newQuantities","type","name","min","value","onChange","handleQuantityChange","onKeyDown","includes","preventDefault","maxlength","prevCart","newCart","push","UncontrolledDropdown","DropdownToggle","tag","Badge","right","pill","Part_Qty","_excluded","propTypes","PropTypes","string","cssModule","object","bool","borderless","dark","responsive","oneOfType","tagPropType","responsiveTag","innerRef","func","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps"],"mappings":"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","file":"static/js/339.810bc366.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Magnify.css\"; // Create a CSS file for styling\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst ImageZoom = ({ imageSrc }) => {\r\n  const [scale, setScale] = useState(1);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (e) => {\r\n      if (e.deltaY > 0) {\r\n        // Scroll down\r\n        if (!e.shiftKey) {\r\n          // Normal scrolling, zoom out vertically\r\n          setScale((prevScale) =>\r\n            prevScale > 0.2 ? prevScale - 0.1 : prevScale\r\n          );\r\n        } else {\r\n          // Shift key + scrolling, zoom out faster\r\n          setScale((prevScale) =>\r\n            prevScale > 0.1 ? prevScale - 0.2 : prevScale\r\n          );\r\n        }\r\n      } else if (e.deltaY < 0) {\r\n        // Scroll up\r\n        if (!e.shiftKey) {\r\n          // Normal scrolling, zoom in vertically\r\n          setScale((prevScale) => prevScale + 0.1);\r\n        } else {\r\n          // Shift key + scrolling, zoom in faster\r\n          setScale((prevScale) => prevScale + 0.2);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"wheel\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"wheel\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleZoomIn = () => {\r\n    setScale((prevScale) => prevScale + 0.1);\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setScale((prevScale) => (prevScale > 0.2 ? prevScale - 0.1 : prevScale));\r\n  };\r\n\r\n  const handleMove = (direction) => {\r\n    if (direction === \"up\") {\r\n      setPosition((prevPosition) => ({\r\n        ...prevPosition,\r\n        y: prevPosition.y - 15,\r\n      }));\r\n    } else if (direction === \"down\") {\r\n      setPosition((prevPosition) => ({\r\n        ...prevPosition,\r\n        y: prevPosition.y + 15,\r\n      }));\r\n    } else if (direction === \"left\") {\r\n      setPosition((prevPosition) => ({\r\n        ...prevPosition,\r\n        x: prevPosition.x - 15,\r\n      }));\r\n    } else if (direction === \"right\") {\r\n      setPosition((prevPosition) => ({\r\n        ...prevPosition,\r\n        x: prevPosition.x + 15,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleImageClick = (e) => {\r\n    // Calculate the zoom position based on the click coordinates\r\n    const boundingBox = e.target.getBoundingClientRect();\r\n    const clickX = e.clientX - boundingBox.left;\r\n    const clickY = e.clientY - boundingBox.top;\r\n\r\n    // Calculate the offsets based on the current scale\r\n    const xOffset = (clickX - boundingBox.width / 2) * (scale - 1);\r\n    const yOffset = (clickY - boundingBox.height / 2) * (scale - 1);\r\n\r\n    setScale(2); // Example: Zoom level when clicking\r\n    setPosition((prevPosition) => ({\r\n      x: prevPosition.x - xOffset,\r\n      y: prevPosition.y - yOffset,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-zoom-container\">\r\n      <div className=\"zoom-controls\">\r\n        <Button size=\"sm\" onClick={handleZoomIn} color=\"primary\" outline>\r\n          +\r\n        </Button>\r\n        <Button size=\"sm\" onClick={handleZoomOut} color=\"primary\" outline>\r\n          -\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          onClick={() => handleMove(\"up\")}\r\n          color=\"primary\"\r\n          outline\r\n        >\r\n          &uarr;\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          onClick={() => handleMove(\"down\")}\r\n          color=\"primary\"\r\n          outline\r\n        >\r\n          &darr;\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          onClick={() => handleMove(\"left\")}\r\n          color=\"primary\"\r\n          outline\r\n        >\r\n          &larr;\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          onClick={() => handleMove(\"right\")}\r\n          color=\"primary\"\r\n          outline\r\n        >\r\n          &rarr;\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            setScale(1);\r\n            setPosition({ x: 5, y: 0 });\r\n          }}\r\n          color=\"primary\"\r\n          outline\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n      <div className=\"image-zoom\">\r\n        <img\r\n          src={imageSrc}\r\n          alt=\"Image\"\r\n          style={{\r\n            transform: `scale(${scale}) translate(${position.x}px, ${position.y}px)`,\r\n            width: \"100%\", // Keep the width at 100%\r\n          }}\r\n          onClick={handleImageClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageZoom;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Imagemagnify from \"./Imagemagnify\";\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Badge,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport \"./Magnify.css\";\r\nimport { AiFillDownCircle, AiFillUpCircle } from \"react-icons/ai\";\r\nimport { PartCatalogueView } from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BsCartCheckFill, BsFillArrowRightSquareFill } from \"react-icons/bs\";\r\nimport * as Icon from \"react-feather\";\r\nimport ZoomimageTest from \"./ZoomimageTest\";\r\n// import { ReactPanZoom } from \"./Ra\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nfunction PartCatalougue() {\r\n  const [CollapseIndex, setCollapseIndex] = useState(\"\");\r\n  const [frontSide, setfrontSide] = useState([]);\r\n  const [AllData, setAllData] = useState({});\r\n  const [ListData, setListData] = useState([]);\r\n  const [Fullimage, setFullimage] = useState(false);\r\n  const [Cartvalue, setCartvalue] = useState(0);\r\n  const [cart, setCart] = useState([]);\r\n  const [quantities, setQuantities] = useState(\r\n    ListData.map((product) => ({\r\n      quantity: 0,\r\n      elementData: product, // You can set this to the product data\r\n    }))\r\n  );\r\n  const context = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    PartCatalogueView()\r\n      .then((res) => {\r\n        // console.log(res?.Parts_Catalogue);\r\n        setAllData(res?.Parts_Catalogue);\r\n        let keys = Object.keys(res?.Parts_Catalogue);\r\n        setCollapseIndex(0);\r\n\r\n        setListData(res?.Parts_Catalogue?.backAxleSubassembly);\r\n        setfrontSide(keys);\r\n        // console.log(keys);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const initialQuantities = new Array(ListData.length).fill(0);\r\n    setQuantities(initialQuantities);\r\n  }, [ListData]);\r\n\r\n  useEffect(() => {\r\n    console.log(context);\r\n  }, [context]);\r\n\r\n  useEffect(() => {\r\n    // console.log(cart);\r\n    context?.setPartsCatalougueCart(cart);\r\n  }, [cart]);\r\n\r\n  const handleIncreaseCount = (index) => {\r\n    setQuantities((prevQuantities) => {\r\n      const newQuantities = [...prevQuantities];\r\n      newQuantities[index] += 1;\r\n      return newQuantities;\r\n    });\r\n  };\r\n\r\n  const handleDecreaseCount = (index) => {\r\n    setQuantities((prevQuantities) => {\r\n      const newQuantities = [...prevQuantities];\r\n      if (newQuantities[index] > 0) {\r\n        newQuantities[index] -= 1;\r\n      }\r\n      return newQuantities;\r\n    });\r\n  };\r\n\r\n  const addToCart = (index) => {\r\n    if (quantities[index] > 0) {\r\n      setCart((prevCart) => {\r\n        const newCart = [...prevCart];\r\n        newCart.push({\r\n          product: ListData[index],\r\n          quantity: quantities[index],\r\n        });\r\n        return newCart;\r\n      });\r\n      setQuantities((prevQuantities) => {\r\n        const newQuantities = [...prevQuantities];\r\n        newQuantities[index] = 0;\r\n        return newQuantities;\r\n      });\r\n    }\r\n  };\r\n\r\n  // const addToCart = (index) => {\r\n  //   debugger;\r\n  //   if (quantities[index] > 0) {\r\n  //     setCart((prevCart) => {\r\n  //       const newCart = [...prevCart];\r\n  //       newCart[index] += quantities[index];\r\n  //       console.log(newCart);\r\n  //       return newCart;\r\n  //     });\r\n  //     setQuantities((prevQuantities) => {\r\n  //       const newQuantities = [...prevQuantities];\r\n  //       newQuantities[index] = 0;\r\n  //       return newQuantities;\r\n  //     });\r\n  //   }\r\n  // };\r\n  const toggleCollapse = (ele, i) => {\r\n    if (ele) {\r\n      setFullimage(true);\r\n    }\r\n    console.log(ele, AllData[ele]);\r\n    setListData(AllData[ele]);\r\n    setCollapseIndex(i);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <a href=\"#\">Home</a>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem>\r\n              <a href=\"#\">Library</a>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Product</BreadcrumbItem>\r\n          </Breadcrumb>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        {!Fullimage && (\r\n          <>\r\n            <Col className=\"mb-2\" lg=\"3\" md=\"3\" sm=\"3\" xs=\"12\">\r\n              <div className=\"collapse-bordered collapse-border mb-3\">\r\n                {frontSide?.map((ele, i) => {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            CollapseIndex === i ? \"#055761\" : \"\"\r\n                          }`,\r\n                          color: `${CollapseIndex === i ? \"white\" : \"\"}`,\r\n                        }}\r\n                        className=\"collapse-border-item\"\r\n                        key={i}\r\n                        onClick={() => toggleCollapse(ele, i)}\r\n                      >\r\n                        <CardHeader className=\"cardheadercustme\">\r\n                          <CardTitle className={`lead collapse-title `}>\r\n                            <div className=\"\">\r\n                              <Row>\r\n                                <Col>\r\n                                  <div className=\"arrowdowandup\">\r\n                                    <div className=\"d-flex\">\r\n                                      <span\r\n                                        style={{\r\n                                          backgroundColor: `${\r\n                                            CollapseIndex === i ? \"#055761\" : \"\"\r\n                                          }`,\r\n                                          color: `${\r\n                                            CollapseIndex === i ? \"white\" : \"\"\r\n                                          }`,\r\n                                        }}\r\n                                      >\r\n                                        {ele.substring(0, 15)}\r\n                                      </span>\r\n                                      {CollapseIndex === i ? (\r\n                                        <>\r\n                                          <span className=\"ml-2\">\r\n                                            <AiFillDownCircle className=\"aiarrow \" />\r\n                                          </span>\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <span className=\"ml-2\">\r\n                                            <AiFillUpCircle className=\"aiarrow\" />\r\n                                          </span>\r\n                                        </>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                            </div>\r\n                          </CardTitle>\r\n                        </CardHeader>\r\n                      </Card>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Col>\r\n          </>\r\n        )}\r\n        <Col\r\n          lg={Fullimage ? \"8\" : \"5\"}\r\n          md={Fullimage ? \"8\" : \"5\"}\r\n          sm={Fullimage ? \"8\" : \"5\"}\r\n          xs=\"12\"\r\n        >\r\n          <div className=\"d-flex justify-content-start\">\r\n            {Fullimage ? (\r\n              <BsFillArrowRightSquareFill\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => setFullimage(false)}\r\n                size=\"25px\"\r\n                fill=\"#055761\"\r\n                className=\"\"\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {ListData && ListData ? (\r\n            <>\r\n              <Imagemagnify imageSrc={ListData[0]?.Part_Image?.text} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Imagemagnify imageSrc=\"https://res.cloudinary.com/dc7hzwpbm/image/upload/v1683461876/software_development.jpg\" />\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col lg=\"4\" md=\"4\" sm=\"4\" xs=\"12\">\r\n          <div\r\n            style={{ height: window.innerHeight - 150 }}\r\n            className=\"tableheadingmy\"\r\n          >\r\n            <Table bordered hover striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Part Name</th>\r\n                  <th>Part Number</th>\r\n                  <th>Qty</th>\r\n                  <th>Add to Cart </th>\r\n                  <th>Part Quantity</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {ListData &&\r\n                  ListData?.map((val, i) => {\r\n                    return (\r\n                      <tr key={val._id}>\r\n                        <th scope=\"row\">{i + 1}</th>\r\n\r\n                        {/* <td>\r\n                              <img src={val.Part_Image?.text} alt=\"img\" />\r\n                            </td> */}\r\n                        <td>{val.Part_Name}</td>\r\n                        <td>{val.Part_Number}</td>\r\n                        <td>\r\n                          <span className=\"d-flex\">\r\n                            <Button\r\n                              style={{ padding: \"7px 8px\" }}\r\n                              className=\"minusbutton\"\r\n                              color=\"primary\"\r\n                              size=\"sm\"\r\n                              onClick={() => handleDecreaseCount(i)}\r\n                              // onClick={() => {\r\n                              //   // handleDecreaseCount();\r\n                              //   const selectedProduct = val[i];\r\n                              //   const quantity = quantities[i];\r\n                              //   console.log(quantity);\r\n                              //   console.log(selectedProduct);\r\n                              // }}\r\n                            >\r\n                              -\r\n                            </Button>\r\n                            <div className=\"inputheading\">\r\n                              <input\r\n                                style={{ width: \"40px\" }}\r\n                                type=\"number\"\r\n                                name=\"cart\"\r\n                                min=\"0\"\r\n                                value={quantities[i]}\r\n                                onChange={(e) => {\r\n                                  handleQuantityChange(i, e.target.value);\r\n                                }}\r\n                                // onChange={(e) => {\r\n\r\n                                //   const newQuantities = [...quantities];\r\n                                //   newQuantities[i] = e.target.value;\r\n                                //   setQuantities(newQuantities);\r\n                                // }}\r\n                                onKeyDown={(e) => {\r\n                                  [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                    e.preventDefault();\r\n                                }}\r\n                                maxlength=\"4\"\r\n                                size=\"2\"\r\n                              />\r\n                            </div>{\" \"}\r\n                            <Button\r\n                              onClick={() => handleIncreaseCount(i)}\r\n                              // onClick={() => {\r\n                              //   const newQuantities = [...quantities];\r\n                              //   newQuantities[i] = e.target.value;\r\n                              //   setQuantities(newQuantities);\r\n                              // }}\r\n                              style={{ padding: \"7px 8px\" }}\r\n                              color=\"primary\"\r\n                              size=\"sm\"\r\n                            >\r\n                              +\r\n                            </Button>\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <>\r\n                            <div\r\n                              style={{ width: \"71px\" }}\r\n                              className=\"addtocart d-flex\"\r\n                            >\r\n                              {quantities[i] > 0 ? (\r\n                                <>\r\n                                  <Button\r\n                                    onClick={() => addToCart(i)}\r\n                                    style={{ padding: \"7px 8px\" }}\r\n                                    color=\"success\"\r\n                                    size=\"sm\"\r\n                                  >\r\n                                    +\r\n                                  </Button>\r\n                                </>\r\n                              ) : null}\r\n                              <UncontrolledDropdown\r\n                                // tag=\"li\"\r\n                                className=\"dropdown-notification nav-item\"\r\n                              >\r\n                                <DropdownToggle\r\n                                  tag=\"a\"\r\n                                  className=\"nav-link nav-link-label\"\r\n                                >\r\n                                  <BsCartCheckFill color=\"#055761\" size={25} />\r\n                                  <Badge\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      top: \"-1px\",\r\n                                      right: \"-2px\",\r\n                                    }}\r\n                                    pill\r\n                                    color=\"primary\"\r\n                                    className=\"badge-up cartbadgecatalougue\"\r\n                                  >\r\n                                    {quantities[i]}\r\n                                  </Badge>\r\n                                </DropdownToggle>\r\n                              </UncontrolledDropdown>\r\n                            </div>\r\n                          </>\r\n                        </td>\r\n                        <td>{val.Part_Qty}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {/* <ZoomimageTest /> */}\r\n        {/* <ReactPanZoom\r\n            alt=\"cool image\"\r\n            image=\"https://drscdn.500px.org/photo/105738331/q%3D80_m%3D2000/v2?webp=true&sig=538a4f76f4966c84acb01426bb4a4a5e4a85b72a2c3bd64973d3a369f9653007\"\r\n          /> */}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PartCatalougue;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;"],"sourceRoot":""}